{"version":3,"sources":["common/fp.js","index/imgs/switch.svg","common/Header.js","index/action.js","index/reducers.js","index/store.js","index/DepartDate.js","index/HighSpeed.js","index/Journey.js","index/Submit.js","common/CitySelector.js","common/DateSelector.js","index/App.js","index/index.js","serviceWorker.js"],"names":["h0","timestamp","Date","now","target","setHours","setMinutes","setSeconds","setMilliseconds","getTime","module","exports","Header","props","onBack","title","className","onClick","width","height","points","stroke","strokeWidth","fill","ACTION_SET_FROM","ACTION_SET_TO","ACTION_SET_IS_CITY_SELECTOR_VISIBLE","ACTION_SET_CURRENT_SELECTING_LEFT_CITY","ACTION_SET_CITY_DATA","ACTION_SET_IS_LOADING_CITY_DATA","ACTION_SET_IS_DATE_SELECTOR_VISIBLE","ACTION_SET_HIGH_SPEED","ACTION_SET_DEPART_DATE","setFrom","from","type","payload","setTo","to","setIsLoadingCityData","isLoadingCityData","setCityData","cityDate","toggleHighSpeed","dispatch","getState","highSpeed","showCitySelector","currentSelectingLeftCity","hideCitySelector","setSelectedCity","city","showDateSelector","hideDateSelector","exchangeFromTo","fetchCityData","cache","JSON","parse","localStorage","getItem","expires","data","fetch","then","res","json","cityData","setItem","stringify","catch","state","action","isCitySelectorVisible","isDateSelectorVisible","departDate","createStore","combineReducers","reducers","applyMiddleware","thunk","DepartDate","time","h0ofDepart","departDateString","useMemo","dayjs","format","isToday","weekString","getDay","name","value","HighSpeed","toggle","classnames","checked","Journey","readOnly","src","switchImg","alt","Submit","memo","CityItem","onSelect","CitySection","cities","data-cate","map","key","AlphaIndex","alpha","alphanet","Array","ele","index","String","fromCharCode","CityList","sections","toAlpha","console","dir","section","citys","SuggestItem","Suggest","searchKey","useState","result","setResult","useEffect","encodeURIComponent","fallBackResult","length","display","item","CitySelector","show","isLoading","setSearchKey","trim","useCallback","document","querySelector","scrollIntoView","hidden","placeholder","onChange","e","Boolean","cityList","Day","day","classes","push","includes","dateString","getDate","Week","days","idx","Month","startingTimeInMonth","startDay","currentDay","getMonth","setDate","concat","lastDay","weeks","row","week","slice","colSpan","getFullYear","DateSelector","monthSequence","setMonth","month","connect","window","history","back","cbs","bindActionCreators","citySelectorCbs","departDateCbs","DateSelectorCbs","highSpeedCbs","onSelectDate","setDepartDate","ReactDOM","render","store","getElementById","serviceWorker","isLocalhost","location","hostname","match","register","config","navigator","URL","process","href","origin","addEventListener","swUrl","response","contentType","headers","get","status","indexOf","ready","registration","unregister","reload","registerValidSW","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error"],"mappings":"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","file":"static/js/index.d18606e4.chunk.js","sourcesContent":["export function h0(timestamp=Date.now()) {\r\n  const target = new Date(timestamp)\r\n  target.setHours(0)\r\n  target.setMinutes(0)\r\n  target.setSeconds(0)\r\n  target.setMilliseconds(0)\r\n \r\n  return target.getTime()\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/switch.e6009882.svg\";","import \"./Header.css\"\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nfunction Header(props) {\r\n  const { onBack, title } = props\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header-back\" onClick={onBack}>\r\n        <svg width=\"42\" height=\"42\">\r\n          <polyline\r\n            points=\"25,13 16,21 25,29\"\r\n            stroke=\"#fff\"\r\n            strokeWidth=\"2\"\r\n            fill=\"none\"\r\n          />\r\n        </svg>\r\n      </div>\r\n      <h1 className=\"header-title\">{title}</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  onBack: PropTypes.func.isRequired,\r\n  title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header\r\n","export const ACTION_SET_FROM = 'SET_FROM';\r\nexport const ACTION_SET_TO = 'SET_TO';\r\nexport const ACTION_SET_IS_CITY_SELECTOR_VISIBLE =\r\n    'SET_IS_CITY_SELECTOR_VISIBLE';\r\nexport const ACTION_SET_CURRENT_SELECTING_LEFT_CITY =\r\n    'SET_CURRENT_SELECTING_LEFT_CITY';\r\nexport const ACTION_SET_CITY_DATA = 'SET_CITY_DATA';\r\nexport const ACTION_SET_IS_LOADING_CITY_DATA = 'SET_IS_LOADING_CITY_DATA';\r\nexport const ACTION_SET_IS_DATE_SELECTOR_VISIBLE =\r\n    'SET_IS_DATE_SELECTOR_VISIBLE';\r\nexport const ACTION_SET_HIGH_SPEED = 'SET_HIGH_SPEED';\r\nexport const ACTION_SET_DEPART_DATE = 'SET_DEPART_DATE';\r\n\r\nexport function setFrom(from) {\r\n    return {\r\n        type: ACTION_SET_FROM,\r\n        payload: from,\r\n    };\r\n}\r\n\r\nexport function setTo(to) {\r\n    return {\r\n        type: ACTION_SET_TO,\r\n        payload: to,\r\n    };\r\n}\r\n\r\nexport function setIsLoadingCityData(isLoadingCityData) {\r\n    return {\r\n        type: ACTION_SET_IS_LOADING_CITY_DATA,\r\n        payload: isLoadingCityData,\r\n    };\r\n}\r\n\r\nexport function setCityData(cityDate) {\r\n    return {\r\n        type: ACTION_SET_CITY_DATA,\r\n        payload: cityDate,\r\n    };\r\n}\r\n\r\nexport function toggleHighSpeed() {\r\n    return (dispatch, getState) => {\r\n        const { highSpeed } = getState();\r\n        dispatch({\r\n            type: ACTION_SET_HIGH_SPEED,\r\n            payload: !highSpeed,\r\n        });\r\n    };\r\n}\r\n\r\nexport function showCitySelector(currentSelectingLeftCity) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: ACTION_SET_IS_CITY_SELECTOR_VISIBLE,\r\n            payload: true,\r\n        });\r\n\r\n        dispatch({\r\n            type: ACTION_SET_CURRENT_SELECTING_LEFT_CITY,\r\n            payload: currentSelectingLeftCity,\r\n        });\r\n    };\r\n}\r\n\r\nexport function hideCitySelector() {\r\n    return {\r\n        type: ACTION_SET_IS_CITY_SELECTOR_VISIBLE,\r\n        payload: false,\r\n    };\r\n}\r\n\r\nexport function setSelectedCity(city) {\r\n    return (dispatch, getState) => {\r\n        const { currentSelectingLeftCity } = getState();\r\n\r\n        if (currentSelectingLeftCity) {\r\n            dispatch(setFrom(city));\r\n        } else {\r\n            dispatch(setTo(city));\r\n        }\r\n\r\n        dispatch(hideCitySelector());\r\n    };\r\n}\r\n\r\nexport function showDateSelector() {\r\n    return {\r\n        type: ACTION_SET_IS_DATE_SELECTOR_VISIBLE,\r\n        payload: true,\r\n    };\r\n}\r\n\r\nexport function hideDateSelector() {\r\n    return {\r\n        type: ACTION_SET_IS_DATE_SELECTOR_VISIBLE,\r\n        payload: false,\r\n    };\r\n}\r\n\r\nexport function exchangeFromTo() {\r\n    return (dispatch, getState) => {\r\n        const { from, to } = getState();\r\n        dispatch(setFrom(to));\r\n        dispatch(setTo(from));\r\n    };\r\n}\r\n\r\nexport function setDepartDate(departDate) {\r\n    return {\r\n        type: ACTION_SET_DEPART_DATE,\r\n        payload: departDate,\r\n    };\r\n}\r\n\r\nexport function fetchCityData() {\r\n    return (dispatch, getState) => {\r\n        const { isLoadingCityData } = getState();\r\n\r\n        if (isLoadingCityData) {\r\n            return;\r\n        }\r\n\r\n        const cache = JSON.parse(\r\n            localStorage.getItem('city_data_cache') || '{}'\r\n        );\r\n\r\n        if (Date.now() < cache.expires) {\r\n            dispatch(setCityData(cache.data));\r\n\r\n            return;\r\n        }\r\n\r\n        dispatch(setIsLoadingCityData(true));\r\n\r\n        fetch('/rest/cities?_' + Date.now())\r\n            .then(res => res.json())\r\n            .then(cityData => {\r\n                dispatch(setCityData(cityData));\r\n\r\n                localStorage.setItem(\r\n                    'city_data_cache',\r\n                    JSON.stringify({\r\n                        expires: Date.now() + 60 * 1000,\r\n                        data: cityData,\r\n                    })\r\n                );\r\n\r\n                dispatch(setIsLoadingCityData(false));\r\n            })\r\n            .catch(() => {\r\n                dispatch(setIsLoadingCityData(false));\r\n            });\r\n    };\r\n}\r\n","import {\r\n  ACTION_SET_FROM,\r\n  ACTION_SET_TO,\r\n  ACTION_SET_IS_CITY_SELECTOR_VISIBLE,\r\n  ACTION_SET_CURRENT_SELECTING_LEFT_CITY,\r\n  ACTION_SET_CITY_DATA,\r\n  ACTION_SET_IS_LOADING_CITY_DATA,\r\n  ACTION_SET_IS_DATE_SELECTOR_VISIBLE,\r\n  ACTION_SET_HIGH_SPEED,\r\n  ACTION_SET_DEPART_DATE\r\n  \r\n} from './action'\r\n\r\nexport default {\r\n    from(state='北京',action){\r\n      const{type,payload} = action\r\n      switch (type) {\r\n        case ACTION_SET_FROM:\r\n          return payload\r\n        default:\r\n      }\r\n      return state\r\n    },\r\n    to(state='上海',action){\r\n      const{type,payload} = action\r\n      switch (type) {\r\n        case ACTION_SET_TO:\r\n          return payload\r\n        default:\r\n      }\r\n      return state\r\n    },\r\n    isCitySelectorVisible(state=false,action){\r\n      const{type,payload} = action\r\n      switch (type) {\r\n        case ACTION_SET_IS_CITY_SELECTOR_VISIBLE:\r\n          return payload\r\n        default:\r\n      }\r\n      return state\r\n    },\r\n    currentSelectingLeftCity(state=false,action){\r\n      const{type,payload} = action\r\n      switch (type) {\r\n        case ACTION_SET_CURRENT_SELECTING_LEFT_CITY:\r\n          return payload\r\n        default:\r\n      }\r\n      return state\r\n    },\r\n    cityData(state = null,action){\r\n      const{type,payload} = action\r\n      switch (type) {\r\n        case ACTION_SET_CITY_DATA:\r\n          return payload\r\n        default:\r\n      }\r\n      return state\r\n    },\r\n    isLoadingCityData(state = false,action){\r\n      const{type,payload} = action\r\n      switch (type) {\r\n        case ACTION_SET_IS_LOADING_CITY_DATA:\r\n          return payload\r\n        default:\r\n      }\r\n      return state\r\n    },\r\n    isDateSelectorVisible(state = false,action){\r\n      const{type,payload} = action\r\n      switch (type) {\r\n        case ACTION_SET_IS_DATE_SELECTOR_VISIBLE:\r\n          return payload\r\n        default:\r\n      }\r\n      return state\r\n    },\r\n    highSpeed(state = false,action){\r\n      const{type,payload} = action\r\n      switch (type) {\r\n        case ACTION_SET_HIGH_SPEED :\r\n          return payload\r\n        default:\r\n      }\r\n      return state\r\n    },\r\n    departDate(state = Date.now(), action) {\r\n      const { type, payload } = action;\r\n      switch (type) {\r\n          case ACTION_SET_DEPART_DATE:\r\n              return payload;\r\n          default:\r\n      }\r\n\r\n      return state;\r\n  },\r\n}","import {\r\n  createStore,\r\n  combineReducers,\r\n  applyMiddleware\r\n} from 'redux'\r\n\r\nimport reducers from './reducers'\r\nimport thunk from 'redux-thunk'\r\n\r\nexport default createStore(\r\n  combineReducers(reducers),\r\n  {\r\n    from:'北京',\r\n    to:'南京',\r\n    isCitySelectorVisible:false,\r\n    currentSelectingLeftCity:false,\r\n    cityData:null,\r\n    isLoadingCityData:false,\r\n    isDateSelectorVisible:false,\r\n    highSpeed:false,\r\n    departDate: Date.now(),\r\n  },\r\n  applyMiddleware(thunk)\r\n)\r\n\r\n\r\n","import React ,{useMemo} from 'react'\r\nimport './DepartDate.css'\r\nimport {h0} from '../common/fp'\r\nimport dayjs from 'dayjs'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\nfunction DepartDate(props) {\r\n  const {\r\n    time,\r\n    onClick\r\n  }=props\r\n\r\n  const h0ofDepart = h0(time)\r\n  const departDate = new Date(h0ofDepart)\r\n\r\n  const departDateString = useMemo(()=>{\r\n    return  dayjs(h0ofDepart).format('YYYY-MM-DD')\r\n   },[h0ofDepart] )\r\n  \r\n  const isToday = h0ofDepart===h0()\r\n\r\n  const weekString  = '周'+['日','一','二','三','四','五','六'][departDate.getDay()] + (isToday?'(今天)':'')\r\n\r\n   return (\r\n    <div className=\"depart-date\" onClick={onClick}> \r\n      <input type=\"hidden\" name=\"date\" value={departDateString}/>\r\n      {departDateString} <span className=\"depart-week\"> {weekString}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nDepartDate.propTypes = {\r\n  time:PropTypes.number.isRequired,\r\n  onClick:PropTypes.func.isRequired\r\n}\r\n\r\nexport default DepartDate\r\n\r\n\r\n\r\n","import React from \"react\"\r\nimport \"./HighSpeed.css\"\r\nimport classnames from 'classnames'\r\nimport PropTypes from 'prop-types'\r\nfunction HighSpeed(props) {\r\n  const {\r\n    highSpeed,\r\n    toggle\r\n  }=props\r\n  return (\r\n    <div className=\"high-speed\">\r\n      <div className=\"high-speed-label\">只看高铁动车</div>\r\n      <div className=\"high-speed-switch\" onClick={()=>toggle()}>\r\n        <input type=\"hidden\" name=\"highSpeed\" value={highSpeed}/>\r\n        <div className={classnames('high-speed-track',{\r\n          checked:highSpeed\r\n        })}>\r\n          <span className={classnames('high-speed-handle',{\r\n            checked:highSpeed\r\n          })}></span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nHighSpeed.propTypes={\r\n  highSpeed:PropTypes.bool.isRequired,\r\n  toggle:PropTypes.func.isRequired\r\n}\r\n\r\nexport default HighSpeed\r\n","import React from \"react\"\r\nimport \"./Journey.css\"\r\nimport switchImg from \"./imgs/switch.svg\"\r\nfunction Journey(props) {\r\n  const { from, to, exchangeFromTo, showCitySelector } = props\r\n  return (\r\n    <div className=\"journey\">\r\n      <div className=\"journey-station\" onClick={() => showCitySelector(true)}>\r\n        <input\r\n          type=\"text\"\r\n          readOnly\r\n          name=\"from\"\r\n          value={from}\r\n          className=\"journey-input journey-from\"\r\n        />\r\n      </div>\r\n      <div className=\"journey-switch\" onClick={() => exchangeFromTo()}>\r\n        <img src={switchImg} width=\"70\" height=\"40\" alt=\"switch\" />\r\n      </div>\r\n      <div className=\"journey-station\" onClick={() => showCitySelector(false)}>\r\n        <input\r\n          type=\"text\"\r\n          readOnly\r\n          name=\"to\"\r\n          value={to}\r\n          className=\"journey-input journey-to\"\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Journey\r\n","import React ,{memo}from 'react'\r\nimport './Submit.css'\r\n\r\nconst Submit = memo(function Submit() {\r\n  return (\r\n    <div className=\"submit\">\r\n      <button className=\"submit-button\" type=\"submit\">搜索</button>\r\n    </div>\r\n  )\r\n\r\n})\r\n\r\n\r\n\r\n\r\nexport default Submit","import React, {\r\n  useState , \r\n  useMemo, \r\n  useEffect, \r\n  memo,\r\n  useCallback} from \"react\"\r\nimport classnames from \"classnames\"\r\nimport PropTypes from 'prop-types'\r\nimport \"./CitySelector.css\"\r\n\r\n\r\n\r\n\r\nconst CityItem = memo(function CityItem(props) {\r\n  const {\r\n    name,\r\n    onSelect,\r\n  }=props\r\n  return (\r\n    <li className=\"city-li\" onClick={()=>onSelect(name)}>\r\n      {name}\r\n    </li>\r\n  )\r\n})\r\n\r\nCityItem.propTypes = {\r\n  name:PropTypes.string.isRequired,\r\n  onSelect:PropTypes.func.isRequired,\r\n}\r\n\r\nconst CitySection =  memo(function CitySection(props) {\r\n  const {\r\n    title,\r\n    cities = [],\r\n    onSelect\r\n  }=props\r\n  return (\r\n    <ul className=\"city-ul\" data-cate={title}>\r\n      <li className=\"city-li\" >\r\n        {title}\r\n      </li>\r\n      {cities.map(city=>{\r\n        return (\r\n          <CityItem \r\n            key= {city.name} \r\n            name={city.name} \r\n            onSelect={onSelect}\r\n          />)\r\n      })}\r\n    </ul>\r\n  )\r\n})\r\n\r\nCitySection.propTypes = { \r\n  title:PropTypes.string.isRequired,\r\n  cities:PropTypes.array,\r\n  onSelect:PropTypes.func.isRequired\r\n}\r\n\r\nconst AlphaIndex =memo(function AlphaIndex(props) {\r\n  const {\r\n    alpha,\r\n    onClick\r\n  }=props\r\n  return (\r\n    <li \r\n      className=\"city-index-item\"\r\n      onClick={()=>onClick(alpha)}\r\n    >\r\n      {alpha}\r\n    </li>\r\n  )\r\n}) \r\n\r\nAlphaIndex.propTypes = {\r\n  alpha:PropTypes.string.isRequired,\r\n  onClick:PropTypes.func.isRequired\r\n}\r\n\r\n\r\nconst alphanet =  Array.from(new Array(26),(ele,index)=>{\r\n  return String.fromCharCode(65+index)\r\n})\r\n\r\n\r\nconst CityList = memo(function CityList(props) {\r\n  const {\r\n    sections,\r\n    onSelect,\r\n    toAlpha\r\n  }=props\r\n  console.dir(sections)\r\n  return(\r\n    <div className=\"city-list\">\r\n      <div className=\"city-cate\">\r\n        {\r\n          sections.map(section =>{\r\n            return (\r\n              <CitySection \r\n                key={section.title}\r\n                title={section.title}\r\n                cities={section.citys}\r\n                onSelect = {onSelect}\r\n              />\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n      <div className=\"city-index\">\r\n      { alphanet.map(alpha=>{\r\n        return (\r\n          <AlphaIndex \r\n            key= {alpha} \r\n            alpha={alpha} \r\n            onClick={toAlpha}\r\n        />)\r\n      })}\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nCityList.propTypes = {\r\n  sections:PropTypes.array.isRequired,\r\n  onSelect:PropTypes.func.isRequired,\r\n  toAlpha:PropTypes.func.isRequired\r\n}\r\n\r\nconst SuggestItem = memo(function SuggestItem(props) {\r\n  const {\r\n    name,\r\n    onClick\r\n  }=props\r\n\r\n  return(\r\n    <li className=\"city-suggest-li\" onClick={()=>onClick(name)}>\r\n      {name}\r\n    </li>\r\n  )\r\n})  \r\nSuggestItem.propTypes={\r\n  name:PropTypes.string.isRequired,\r\n  onClick:PropTypes.func.isRequired,\r\n\r\n}\r\nconst Suggest = memo(function Suggest(props) {\r\n  const {\r\n    searchKey,\r\n    onSelect,\r\n  }=props\r\n  const [result,setResult] = useState([])\r\nuseEffect(()=>{\r\n  fetch('/rest/search?key='+encodeURIComponent(searchKey))\r\n    .then(res=>res.json)\r\n    .then(data=>{\r\n      const {\r\n        result,\r\n        searchKey:sKey\r\n      }=data\r\n      if (sKey===searchKey) {\r\n        setResult(result)\r\n      }\r\n    })\r\n},[searchKey])\r\n\r\nconst fallBackResult = useMemo(()=>{\r\n  if (!result.length) {\r\n    return [{\r\n      display:searchKey\r\n    }]\r\n  }\r\n  return result\r\n},[result,searchKey])\r\n\r\n  return (\r\n    <li className=\"city-suggest\">\r\n      <ul className=\"city-suggest-ul\">\r\n        {\r\n          fallBackResult.map(item=>{\r\n            return (\r\n              <SuggestItem\r\n                key= {item.display}\r\n                name={item.display}\r\n                onClick={onSelect}\r\n              />\r\n            )\r\n          })\r\n        }\r\n      </ul>\r\n    </li>\r\n  )\r\n})\r\n\r\nSuggest.propTypes={\r\n  searchKey:PropTypes.string.isRequired,\r\n  onSelect:PropTypes.func.isRequired\r\n}\r\n\r\nconst CitySelector = memo(function CitySelector(props) {\r\n  const { \r\n          show, \r\n          cityData, \r\n          isLoading ,\r\n          onBack,\r\n          fetchCityData,\r\n          onSelect\r\n      } = props\r\n  const [searchKey,setSearchKey] = useState('')\r\n  const key = useMemo(()=>searchKey.trim(),[searchKey])\r\n  useEffect(()=>{\r\n    if (!show || cityData || isLoading) {\r\n      return\r\n    }\r\n    fetchCityData()\r\n  },[show, cityData, isLoading, fetchCityData])\r\n\r\n  const toAlpha = useCallback(alpha =>{\r\n    document.querySelector(`[data-cate=${alpha}]`)\r\n      .scrollIntoView(true)\r\n  },[])\r\n  const ontputCitySections = ()=>{\r\n    if (isLoading) {\r\n      return (\r\n        <div>loading</div>\r\n      )\r\n    }\r\n    if (cityData) { \r\n      return (\r\n        <CityList \r\n          sections={cityData.cityList}\r\n          onSelect = {onSelect}\r\n          toAlpha={toAlpha}\r\n        />\r\n      )\r\n    } \r\n    return <div>error</div>\r\n  }\r\n  return (\r\n    <div className={classnames(\"city-selector\", { hidden: !show })}>\r\n      <div className=\"city-search\">\r\n        <div className=\"search-back\" onClick={()=>onBack()}>\r\n          <svg width=\"42\" height=\"42\">\r\n            <polyline\r\n              points=\"25,13 16,21 25,29\"\r\n              stroke=\"#fff\"\r\n              strokeWidth=\"2\"\r\n              fill=\"none\"\r\n            />\r\n          </svg>\r\n        </div>\r\n        <div className=\"search-input-wrapper\">\r\n          <input\r\n            type=\"text\"\r\n            value={searchKey}\r\n            className=\"search-input\"\r\n            placeholder=\"城市、车站的中文或拼音\"\r\n            onChange={(e)=>setSearchKey(e.target.value)}\r\n          />\r\n        </div>\r\n        <i className={classnames('search-clean',{\r\n          hidden: key.length===0\r\n        })}\r\n           onClick={()=>setSearchKey('')}\r\n         >\r\n          &#xf063;\r\n        </i>\r\n      </div>\r\n      {\r\n        Boolean(key)&&(\r\n          <Suggest \r\n            searchKey={key}\r\n            onSelect={key=>onSelect(key)}\r\n          />\r\n        )\r\n      }\r\n      {ontputCitySections()}\r\n    </div>\r\n  )\r\n})\r\n\r\nCitySelector.propTypes = {\r\n  show:PropTypes.bool.isRequired,\r\n  cityData:PropTypes.object,\r\n  isLoading:PropTypes.bool.isRequired,\r\n  onBack:PropTypes.func.isRequired,\r\n  fetchCityData:PropTypes.func.isRequired,\r\n  onSelect:PropTypes.func.isRequired\r\n}\r\n\r\nexport default CitySelector","import React from \"react\"\r\nimport \"./DateSelector.css\"\r\nimport PropTypes from \"prop-types\"\r\nimport classnames from \"classnames\"\r\nimport Header from \"./Header\"\r\nimport { h0 } from \"./fp\"\r\n\r\nfunction Day(props) {\r\n  const {\r\n    day, //这一天的零时刻\r\n    onSelect\r\n  } = props\r\n  if (!day) {\r\n    return <td className=\"null\"></td>\r\n  }\r\n  const classes = []\r\n  const now = h0()\r\n\r\n  if (day < now) {\r\n    classes.push(\"disabled\")\r\n  }\r\n  if ([6, 0].includes(new Date(day).getDay())) {\r\n    classes.push(\"weekend\")\r\n  }\r\n\r\n  const dateString = now === day ? \"今天\" : new Date(day).getDate()\r\n  return (\r\n    <td className={classnames(classes)} onClick={()=>onSelect(day)}>\r\n      {dateString}\r\n    </td>\r\n  )\r\n}\r\nDay.propTypes = {\r\n  day: PropTypes.number, //这个day有可能是不存在的\r\n  onSelect: PropTypes.func.isRequired\r\n}\r\n\r\nfunction Week(props) {\r\n  const { days, onSelect } = props\r\n  return (\r\n    <tr className=\"date-table-days\">\r\n      {days.map((day, idx) => {\r\n        return <Day key={idx} day={day} onSelect={onSelect} />\r\n      })}\r\n    </tr>\r\n  )\r\n}\r\n\r\nWeek.propTypes = {\r\n  days: PropTypes.array.isRequired,\r\n  onSelect: PropTypes.func.isRequired\r\n}\r\n\r\nfunction Month(props) {\r\n  const { startingTimeInMonth, onSelect } = props\r\n  const startDay = new Date(startingTimeInMonth)\r\n  const currentDay = new Date(startingTimeInMonth)\r\n  let days = []\r\n\r\n  while (currentDay.getMonth() === startDay.getMonth()) {\r\n    days.push(currentDay.getTime())\r\n    currentDay.setDate(currentDay.getDate() + 1)\r\n  }\r\n\r\n\r\n  days = new Array(startDay.getDay() ? startDay.getDay() - 1 : 6)\r\n    .fill(null)\r\n    .concat(days)\r\n\r\n  const lastDay = new Date(days[days.length - 1])\r\n\r\n  days = days.concat(\r\n    new Array(lastDay.getDay() ? 7 - lastDay.getDay() : 0).fill(null)\r\n  )\r\n  \r\n  const weeks = []\r\n\r\n  for (let row = 0; row < days.length/7; ++row) {\r\n    const week = days.slice(row * 7, (row + 1) * 7)\r\n    weeks.push(week)\r\n  }\r\n\r\n  return (\r\n    <table className=\"date-table\">\r\n      <thead>\r\n        <tr>\r\n          <td colSpan=\"7\">\r\n            <h5>\r\n              {startDay.getFullYear()}年{startDay.getMonth() + 1}月\r\n            </h5>\r\n          </td>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr className=\"date-table-weeks\">\r\n          <th>周一</th>\r\n          <th>周二</th>\r\n          <th>周三</th>\r\n          <th>周四</th>\r\n          <th>周五</th>\r\n          <th className=\"weekend\">周六</th>\r\n          <th className=\"weekend\">周日</th>\r\n        </tr>\r\n        {weeks.map((week, index) => {\r\n          return (\r\n            <Week\r\n              key={index} //由于每一周的顺序都是不变的，在这里可以安全的使用index\r\n              days={week}\r\n              onSelect={onSelect}\r\n            />\r\n          )\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nMonth.propTypes = {\r\n  startingTimeInMonth: PropTypes.number.isRequired,\r\n  onSelect: PropTypes.func.isRequired\r\n}\r\n\r\nexport default function DateSelector(props) {\r\n  const { show, onSelect, onBack } = props\r\n  const now = new Date()\r\n  now.setHours(0)\r\n  now.setMinutes(0)\r\n  now.setSeconds(0)\r\n  now.setMilliseconds(0)\r\n  now.setDate(1)\r\n\r\n  const monthSequence = [now.getTime()]\r\n\r\n  now.setMonth(now.getMonth() + 1) //这里会改变now的值\r\n  monthSequence.push(now.getTime())\r\n\r\n  now.setMonth(now.getMonth() + 1)\r\n  monthSequence.push(now.getTime())\r\n\r\n  return (\r\n    <div className={classnames(\"date-selector\", { hidden: !show })}>\r\n      <Header title=\"日期选择\" onBack={onBack} />\r\n      <div className=\"date-selector-tables\">\r\n        {monthSequence.map(month => {\r\n          return (\r\n            <Month\r\n              key={month}\r\n              startingTimeInMonth={month}\r\n              onSelect={onSelect}\r\n            />\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nDateSelector.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func.isRequired,\r\n  onBack: PropTypes.func.isRequired\r\n}\r\n","import React, { useCallback, useMemo } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport \"./App.css\"\r\nimport Header from \"../common/Header\"\r\nimport DepartDate from \"./DepartDate\"\r\nimport HighSpeed from \"./HighSpeed\"\r\nimport Journey from \"./Journey\"\r\nimport Submit from \"./Submit\"\r\nimport { \r\n  exchangeFromTo,\r\n  showCitySelector,\r\n  hideCitySelector,\r\n  fetchCityData,\r\n  setSelectedCity,\r\n  showDateSelector,\r\n  hideDateSelector,\r\n  setDepartDate,\r\n  toggleHighSpeed\r\n} from \"./action.js\"\r\nimport CitySelector from \"../common/CitySelector\"\r\nimport DateSelector from \"../common/DateSelector\"\r\nimport {h0} from '../common/fp'\r\nfunction App(props) {\r\n  const {\r\n    from,\r\n    to,\r\n    dispatch,\r\n    cityData,\r\n    isLoadingCityData,\r\n    isCitySelectorVisible,\r\n    isDateSelectorVisible,\r\n    departDate,\r\n    highSpeed\r\n  } = props\r\n  const onBack = useCallback(() => {\r\n    window.history.back()\r\n  }, [])\r\n\r\n  const cbs = useMemo(() => {\r\n    return bindActionCreators(\r\n      {\r\n        exchangeFromTo,\r\n        showCitySelector,\r\n        hideCitySelector\r\n      },\r\n      dispatch)\r\n  }, [dispatch])\r\n\r\n  const citySelectorCbs = useMemo(()=>{\r\n    return bindActionCreators({\r\n      onBack:hideCitySelector,\r\n      fetchCityData,\r\n      onSelect:setSelectedCity\r\n    },dispatch)\r\n  },[dispatch])\r\n\r\n  const departDateCbs=useMemo(()=>{//cbs的意思是callbacks\r\n    return bindActionCreators({\r\n      onClick:showDateSelector,\r\n    },dispatch)\r\n  },[dispatch])\r\n\r\n  const DateSelectorCbs = useMemo(()=>{\r\n    return bindActionCreators({\r\n      onBack:hideDateSelector\r\n    },dispatch)\r\n  },[dispatch])\r\n\r\n  const highSpeedCbs = useMemo(()=>{\r\n    return bindActionCreators({\r\n      toggle:toggleHighSpeed\r\n    },dispatch)\r\n  },[dispatch])\r\n\r\n  const onSelectDate=useCallback((day)=>{\r\n    if (!day) {\r\n      return\r\n    }\r\n    if (day<h0) {\r\n      return\r\n    }\r\n    dispatch(setDepartDate(day))\r\n    dispatch(hideDateSelector())\r\n  },[dispatch])\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"header-wrapper\">\r\n        <Header title=\"火车票\" onBack={onBack} />\r\n      </div>\r\n      <form className=\"form\" action=\"./query.html\">\r\n        <Journey from={from} to={to} {...cbs} />\r\n        <DepartDate \r\n          time={departDate}\r\n          {...departDateCbs}\r\n        />\r\n        <HighSpeed\r\n          highSpeed={highSpeed}\r\n          {...highSpeedCbs}   \r\n        />    \r\n        <Submit />\r\n      </form>\r\n      <CitySelector\r\n        show={isCitySelectorVisible}\r\n        cityData={cityData}\r\n        isLoading={isLoadingCityData}\r\n        {...citySelectorCbs}\r\n      />\r\n      <DateSelector \r\n        show={isDateSelectorVisible}\r\n        {...DateSelectorCbs}\r\n        onSelect={onSelectDate}\r\n\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  function mapStateToProps(state) { //这里的state就是当前的store里面的state\r\n    return state\r\n  },\r\n  function mapDispatchToProps(dispatch) {\r\n    return { dispatch } //对象的键是dispat，只是传进来的参数，相当于{dispatch:dispatch}\r\n  }\r\n)(App)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {Provider} from 'react-redux'\r\nimport 'normalize.css/normalize.css'\r\nimport store from './store'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from '../serviceWorker'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n\r\nif ('production'===process.env.NODE_ENV){\r\n  serviceWorker.register()\r\n}else{\r\n  serviceWorker.unregister()\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}