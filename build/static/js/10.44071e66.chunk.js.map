{"version":3,"sources":["../node_modules/left-pad/index.js","ticket/Schedule.js"],"names":["module","exports","str","len","ch","length","cache","pad","ScheduleRow","memo","props","index","station","arriveTime","departTime","stay","isStartStation","isEndStation","isDepartStation","isArriveStation","beforeDepartStation","afterArriveStation","className","classnames","leftPad","Schedule","date","trainNumber","departStation","arriveStation","useState","scheduleList","setScheduleList","useEffect","url","URI","setSearch","dayjs","format","toString","fetch","then","response","json","data","departRow","arriveRow","i","Object","assign","map","schedule","console","log","key"],"mappings":"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","file":"static/js/10.44071e66.chunk.js","sourcesContent":["/* This program is free software. It comes without any warranty, to\n     * the extent permitted by applicable law. You can redistribute it\n     * and/or modify it under the terms of the Do What The Fuck You Want\n     * To Public License, Version 2, as published by Sam Hocevar. See\n     * http://www.wtfpl.net/ for more details. */\n'use strict';\n\nmodule.exports = leftPad;\nvar cache = ['', ' ', '  ', '   ', '    ', '     ', '      ', '       ', '        ', '         '];\n\nfunction leftPad(str, len, ch) {\n  // convert `str` to a `string`\n  str = str + ''; // `len` is the `pad`'s length now\n\n  len = len - str.length; // doesn't need to pad\n\n  if (len <= 0) return str; // `ch` defaults to `' '`\n\n  if (!ch && ch !== 0) ch = ' '; // convert `ch` to a `string` cuz it could be a number\n\n  ch = ch + ''; // cache common use cases\n\n  if (ch === ' ' && len < 10) return cache[len] + str; // `pad` starts with an empty string\n\n  var pad = ''; // loop\n\n  while (true) {\n    // add `ch` to `pad` if `len` is odd\n    if (len & 1) pad += ch; // divide `len` by 2, ditch the remainder\n\n    len >>= 1; // \"double\" the `ch` so this operation count grows logarithmically on `len`\n    // each time `ch` is \"doubled\", the `len` would need to be \"doubled\" too\n    // similar to finding a value in binary search tree, hence O(log(n))\n\n    if (len) ch += ch; // `len` is 0, exit the loop\n    else break;\n  } // pad `str`!\n\n\n  return pad + str;\n}","import React,{\r\n  memo,\r\n  useState,\r\n  useEffect\r\n} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport URI from 'urijs'\r\nimport './Schedule.css'\r\nimport classnames from 'classnames'\r\nimport leftPad from 'left-pad'\r\nimport dayjs from 'dayjs'\r\n\r\n\r\nconst ScheduleRow = memo(function ScheduleRow(props) {\r\n  const {\r\n    index,\r\n    station,\r\n    arriveTime,\r\n    departTime,\r\n    stay,\r\n\r\n    isStartStation,\r\n    isEndStation,\r\n    isDepartStation,\r\n    isArriveStation,\r\n    beforeDepartStation,\r\n    afterArriveStation,\r\n  }=props\r\n\r\n\r\n  return (\r\n    <li>\r\n      <div className={classnames('icon',{\r\n        'icon-red':isDepartStation || isArriveStation,\r\n      })}>\r\n        {\r\n          isDepartStation\r\n          ?'出'\r\n          :isArriveStation\r\n            ?'到'\r\n            :leftPad(index,2,0)\r\n        }\r\n      </div>\r\n      <div className={classnames('row',{\r\n        'grey':beforeDepartStation || afterArriveStation\r\n      })}>\r\n        <span className={classnames('station',{\r\n          'red':isArriveStation || isDepartStation\r\n        })}>\r\n          {station}\r\n        </span>\r\n        <span className={classnames('arrtime',{\r\n          'red':isArriveStation\r\n        })}>\r\n          {isStartStation?'始发站':arriveTime}\r\n        </span>\r\n        <span className={classnames('deptime',{\r\n          'red':isDepartStation\r\n        })}>\r\n          {isEndStation?'终到站':departTime}\r\n        </span> \r\n        <span className=\"stoptime\">\r\n          {isStartStation || isEndStation ? '-':stay+'分'}\r\n        </span>\r\n      </div>\r\n    </li>\r\n  )\r\n})\r\nScheduleRow.propTypes={\r\n  index:PropTypes.number.isRequired,\r\n  station:PropTypes.string.isRequired,\r\n  arriveTime:PropTypes.string.isRequired,\r\n  departTime:PropTypes.string.isRequired,\r\n  stay:PropTypes.number.isRequired,\r\n\r\n  isStartStation:PropTypes.bool.isRequired,\r\n  isEndStation:PropTypes.bool.isRequired,\r\n  isDepartStation:PropTypes.bool.isRequired,\r\n  isArriveStation:PropTypes.bool.isRequired,\r\n  beforeDepartStation:PropTypes.bool.isRequired,\r\n  afterArriveStation:PropTypes.bool.isRequired,\r\n}\r\n\r\n\r\nconst Schedule = memo(function Schedule(props) {\r\n  const {\r\n    date,\r\n    trainNumber,\r\n    departStation,\r\n    arriveStation,\r\n  }=props\r\n\r\n  const [scheduleList,setScheduleList] = useState([])\r\n\r\n  useEffect(()=>{\r\n    const url = new URI('/rest/schedule')\r\n      .setSearch('trainNumber',trainNumber)\r\n      .setSearch('departStation',departStation)\r\n      .setSearch('arriveStation',arriveStation)\r\n      .setSearch('date',dayjs(date).format('YYYY-MM-DD'))\r\n      .toString() //返回字符串形式的url\r\n    fetch(url)\r\n      .then(response=>response.json())\r\n      .then(data=>{\r\n        let departRow //出发车站\r\n        let arriveRow //到达车站\r\n\r\n        for(let i=0;i<data.length;++i){\r\n          if (!departRow) {\r\n            if(data[i].station===departStation){\r\n              departRow = Object.assign(data[i],{\r\n                beforeDepartStation:false,\r\n                isDepartStation:true,\r\n                afterArriveStation:false,\r\n                isArriveStation:false\r\n              })\r\n            }else{\r\n              Object.assign(data[i],{\r\n                beforeDepartStation:true,\r\n                isDepartStation:false,\r\n                afterArriveStation:false,\r\n                isArriveStation:false\r\n              })\r\n            }\r\n          }else if(!arriveRow){\r\n            if (data[i].station===arriveStation) {\r\n              arriveRow = Object.assign(data[i],{\r\n                beforeDepartStation:false,\r\n                isDepartStation:false,\r\n                afterArriveStation:false,\r\n                isArriveStation:true,\r\n              })  \r\n            }else{\r\n              Object.assign(data[i],{\r\n                beforeDepartStation:false,\r\n                isDepartStation:false,\r\n                afterArriveStation:false,\r\n                isArriveStation:false,\r\n              })\r\n            }\r\n          }else{\r\n            Object.assign(data[i],{\r\n              beforeDepartStation:false,\r\n              isDepartStation:false,\r\n              afterArriveStation:true,\r\n              isArriveStation:false,\r\n            })\r\n          }\r\n          Object.assign(data[i],{\r\n             isStartStation:i===0,\r\n             isEndStation:i===data.length-1\r\n          })\r\n        }\r\n        setScheduleList(data)\r\n      })\r\n  },[date,trainNumber,departStation,arriveStation,])\r\n\r\n  return (\r\n    <div className=\"schedule\">\r\n        <div className=\"dialog\">\r\n          <h1>列车时刻表</h1>\r\n          <div className=\"head\">\r\n            <span className=\"station\">车站</span>\r\n            <span className=\"deptime\">到达</span>\r\n            <span className=\"arrtime\">发车</span>\r\n            <span className=\"stoptime\">停留时间</span>\r\n          </div>\r\n          <ul>\r\n            {\r\n              scheduleList.map((schedule,index)=>{\r\n                console.log(schedule)\r\n                return (\r\n                  <ScheduleRow \r\n                    index={index+1}\r\n                    {...schedule}\r\n                    key={schedule.station}\r\n                  />\r\n                )\r\n              })\r\n            }\r\n          </ul>\r\n        </div>\r\n    </div>\r\n  ) \r\n})\r\n\r\nSchedule.propTypes={\r\n  date:PropTypes.number.isRequired,\r\n  trainNumber:PropTypes.string.isRequired,\r\n  departStation:PropTypes.string.isRequired,\r\n  arriveStation:PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Schedule\r\n\r\n\r\n\r\n"],"sourceRoot":""}